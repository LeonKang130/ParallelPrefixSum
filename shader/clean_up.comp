#version 460

#define STATUS_FLAG_LEN 2

#define THREADS_PER_WARP 32
#define WARPS_PER_BLOCK 32
#define THREADS_PER_BLOCK (THREADS_PER_WARP * WARPS_PER_BLOCK)
#define ELEMENTS_PER_THREAD 32
#define ELEMENTS_PER_WARP (ELEMENTS_PER_THREAD * THREADS_PER_WARP)
#define ELEMENTS_PER_BLOCK (ELEMENTS_PER_WARP * WARPS_PER_BLOCK)

layout(std430, binding = 1) buffer InoutBuffer {
    int inout_data[];
};

layout(local_size_x = THREADS_PER_BLOCK, local_size_y = 1, local_size_z = 1) in;

void main() {
    int thread_index = int(gl_LocalInvocationID.x) % THREADS_PER_WARP;
    int warp_index = int(gl_LocalInvocationID.x) / THREADS_PER_WARP;
    int block_index = int(gl_GlobalInvocationID.x) / THREADS_PER_BLOCK;
    int current_warp_offset = block_index * ELEMENTS_PER_BLOCK + warp_index * ELEMENTS_PER_WARP;
    for (int i = current_warp_offset; i != current_warp_offset + ELEMENTS_PER_WARP; i += THREADS_PER_WARP) {
        inout_data[i + thread_index] = inout_data[i + thread_index] >> STATUS_FLAG_LEN;
    }
}
